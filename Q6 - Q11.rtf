{\rtf1\ansi\ansicpg1252\cocoartf2580
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fnil\fcharset0 Menlo-Regular;\f1\fnil\fcharset0 Menlo-Bold;}
{\colortbl;\red255\green255\blue255;\red100\green56\blue32;\red255\green255\blue255;\red196\green26\blue22;
\red0\green0\blue0;\red155\green35\blue147;\red11\green79\blue121;\red93\green108\blue121;\red15\green104\blue160;
\red28\green70\blue74;\red57\green0\blue160;\red50\green109\blue116;\red28\green0\blue207;\red108\green54\blue169;
}
{\*\expandedcolortbl;;\csgenericrgb\c39147\c22031\c12446;\csgenericrgb\c100000\c100000\c100000;\csgenericrgb\c77000\c10200\c8600;
\csgenericrgb\c0\c0\c0\c85000;\csgenericrgb\c60759\c13753\c57628;\csgenericrgb\c4314\c30980\c47451;\csgenericrgb\c36526\c42188\c47515;\csgenericrgb\c5882\c40784\c62745;
\csgenericrgb\c10981\c27276\c28869;\csgenericrgb\c22454\c0\c62803;\csgenericrgb\c19418\c42935\c45455;\csgenericrgb\c11000\c0\c81000;\csgenericrgb\c42190\c21278\c66379;
}
\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\deftab593
\pard\tx593\pardeftab593\pardirnatural\partightenfactor0

\f0\fs24 \cf2 \cb3 #include \cf4 <iostream>\cf5 \
\cf2 #include \cf4 <cmath>\cf5 \

\f1\b \cf6 using
\f0\b0 \cf5  
\f1\b \cf6 namespace
\f0\b0 \cf5  \cf7 std\cf5 ;\
\

\f1\b \cf6 class
\f0\b0 \cf5  \cf7 Ellipse\cf5 \
\{\

\f1\b \cf6 private
\f0\b0 \cf5 :\
    
\f1\b \cf6 double
\f0\b0 \cf5  minorAxis, majorAxis;\

\f1\b \cf6 public
\f0\b0 \cf5 :\
    \cf8 //Consturctors\cf5 \
    \cf9 Ellipse\cf5 ();\
    \cf9 Ellipse\cf5 (
\f1\b \cf6 const
\f0\b0 \cf5  
\f1\b \cf6 double
\f0\b0 \cf5  &, 
\f1\b \cf6 const
\f0\b0 \cf5  
\f1\b \cf6 double
\f0\b0 \cf5  &);\
    \cf9 Ellipse\cf5 (
\f1\b \cf6 const
\f0\b0 \cf5  \cf10 Ellipse\cf5  &);\
    \cf8 //Assignment operator\cf5 \
    \cf10 Ellipse\cf5 & 
\f1\b \cf6 operator
\f0\b0 \cf5 =(
\f1\b \cf6 const
\f0\b0 \cf5  \cf10 Ellipse\cf5 &);\
    \cf8 //Getters\cf5 \
    
\f1\b \cf6 double
\f0\b0 \cf5  \cf9 getMinorAxis\cf5 () 
\f1\b \cf6 const
\f0\b0 \cf5 ;\
    
\f1\b \cf6 double
\f0\b0 \cf5  \cf9 getMajorAxis\cf5 () 
\f1\b \cf6 const
\f0\b0 \cf5 ;\
    \cf8 //Setters\cf5 \
    
\f1\b \cf6 void
\f0\b0 \cf5  \cf9 setMinorAxis\cf5 (
\f1\b \cf6 const
\f0\b0 \cf5  
\f1\b \cf6 double
\f0\b0 \cf5  &);\
    
\f1\b \cf6 void
\f0\b0 \cf5  \cf9 setMajorAxis\cf5 (
\f1\b \cf6 const
\f0\b0 \cf5  
\f1\b \cf6 double
\f0\b0 \cf5  &);\
    \cf8 //Additional\cf5 \
    
\f1\b \cf6 double
\f0\b0 \cf5  \cf9 getArea\cf5 () 
\f1\b \cf6 const
\f0\b0 \cf5 ;\
    
\f1\b \cf6 double
\f0\b0 \cf5  \cf9 getCircumference\cf5 () 
\f1\b \cf6 const
\f0\b0 \cf5 ;\
    
\f1\b \cf6 friend
\f0\b0 \cf5  \cf11 istream\cf5 & 
\f1\b \cf6 operator
\f0\b0 \cf5 >>(\cf11 istream\cf5 & inputStream, \cf10 Ellipse\cf5  &e);\
    
\f1\b \cf6 friend
\f0\b0 \cf5  \cf11 ostream\cf5 & 
\f1\b \cf6 operator
\f0\b0 \cf5 <<(\cf11 ostream\cf5 & outputStream, 
\f1\b \cf6 const
\f0\b0 \cf5  \cf10 Ellipse\cf5  &e);\
\};\
\cf9 Ellipse\cf5 ::\cf9 Ellipse\cf5 ()\
\{\
    \cf12 minorAxis\cf5  = \cf13 0.0\cf5 ;\
    \cf12 majorAxis\cf5  = \cf13 0.0\cf5 ;\
\}\
\cf10 Ellipse\cf5 ::\cf9 Ellipse\cf5 (
\f1\b \cf6 const
\f0\b0 \cf5  
\f1\b \cf6 double
\f0\b0 \cf5  &a, 
\f1\b \cf6 const
\f0\b0 \cf5  
\f1\b \cf6 double
\f0\b0 \cf5  &b)\
\{\
    \cf12 minorAxis\cf5  = a;\
    \cf12 majorAxis\cf5  = b;\
\}\
\cf10 Ellipse\cf5 ::\cf9 Ellipse\cf5 (
\f1\b \cf6 const
\f0\b0 \cf5  \cf10 Ellipse\cf5  &e)\
\{\
    
\f1\b \cf6 this
\f0\b0 \cf5 ->\cf12 minorAxis\cf5  = e.\cf12 getMinorAxis\cf5 ();\
    
\f1\b \cf6 this
\f0\b0 \cf5 ->\cf12 majorAxis\cf5  = e.\cf12 getMajorAxis\cf5 ();\
\}\
\cf10 Ellipse\cf5 & \cf10 Ellipse\cf5 ::
\f1\b \cf6 operator
\f0\b0 \cf5 =(
\f1\b \cf6 const
\f0\b0 \cf5  \cf10 Ellipse\cf5  &e)\
\{\
    \cf12 minorAxis\cf5  = e.\cf12 getMinorAxis\cf5 ();\
    \cf12 majorAxis\cf5  = e.\cf12 getMinorAxis\cf5 ();\
    
\f1\b \cf6 return
\f0\b0 \cf5  *
\f1\b \cf6 this
\f0\b0 \cf5 ;\
\}\

\f1\b \cf6 double
\f0\b0 \cf5  \cf10 Ellipse\cf5 ::\cf9 getMinorAxis\cf5 () 
\f1\b \cf6 const
\f0\b0 \cf5 \
\{\
    
\f1\b \cf6 return
\f0\b0 \cf5  \cf12 minorAxis\cf5 ;\
\}\

\f1\b \cf6 double
\f0\b0 \cf5  \cf10 Ellipse\cf5 ::\cf9 getMajorAxis\cf5 () 
\f1\b \cf6 const
\f0\b0 \cf5 \
\{\
    
\f1\b \cf6 return
\f0\b0 \cf5  \cf12 majorAxis\cf5 ;\
\}\

\f1\b \cf6 void
\f0\b0 \cf5  \cf10 Ellipse\cf5 ::\cf9 setMinorAxis\cf5 (
\f1\b \cf6 const
\f0\b0 \cf5  
\f1\b \cf6 double
\f0\b0 \cf5  & a)\
\{\
    \cf12 minorAxis\cf5  = a;\
\}\

\f1\b \cf6 void
\f0\b0 \cf5  \cf10 Ellipse\cf5 ::\cf9 setMajorAxis\cf5 (
\f1\b \cf6 const
\f0\b0 \cf5  
\f1\b \cf6 double
\f0\b0 \cf5  & b)\
\{\
    \cf12 majorAxis\cf5  = b;\
\}\

\f1\b \cf6 double
\f0\b0 \cf5  \cf10 Ellipse\cf5 ::\cf9 getArea\cf5 () 
\f1\b \cf6 const
\f0\b0 \cf5 \
\{\
    
\f1\b \cf6 return
\f0\b0 \cf5  \cf2 M_PI\cf5  * \cf12 minorAxis\cf5  * \cf12 majorAxis\cf5 ;\
\}\

\f1\b \cf6 double
\f0\b0 \cf5  \cf10 Ellipse\cf5 ::\cf9 getCircumference\cf5 () 
\f1\b \cf6 const
\f0\b0 \cf5 \
\{\
    
\f1\b \cf6 return
\f0\b0 \cf5  \cf13 2\cf5 *\cf2 M_PI\cf5 *\cf14 sqrt\cf5 ((\cf14 pow\cf5 (
\f1\b \cf6 this
\f0\b0 \cf5 ->\cf12 getMajorAxis\cf5 (),\cf13 2\cf5 ) + \cf14 pow\cf5 (
\f1\b \cf6 this
\f0\b0 \cf5 ->\cf12 getMinorAxis\cf5 (),\cf13 2\cf5 ))/\cf13 2\cf5 );\
\}\
\cf11 istream\cf5 & 
\f1\b \cf6 operator
\f0\b0 \cf5 >>(\cf11 istream\cf5 & inputStream, \cf10 Ellipse\cf5  &e)\
\{\
    
\f1\b \cf6 double
\f0\b0 \cf5  len;\
    \cf14 cout\cf5 <<\cf4 "Reading Ellipse information"\cf5 <<\cf14 endl\cf5 <<\cf4 "Enter major Axis length: "\cf5 ;\
    inputStream>>len;\
    e.\cf12 setMajorAxis\cf5 (len);\
    \cf14 cout\cf5 <<\cf4 "Enter minor Axis length: "\cf5 ;\
    inputStream>>len;\
    e.\cf12 setMinorAxis\cf5 (len);\
    
\f1\b \cf6 return
\f0\b0 \cf5  inputStream;\
\}\
\cf11 ostream\cf5 & 
\f1\b \cf6 operator
\f0\b0 \cf5 <<(\cf11 ostream\cf5 & outputStream, 
\f1\b \cf6 const
\f0\b0 \cf5  \cf10 Ellipse\cf5  &e)\
\{\
    outputStream<<\cf4 "Ellipse: major axis= "\cf5 <<e.\cf12 getMajorAxis\cf5 ()<<\cf4 ", minor axis= "\cf5 <<e.\cf12 getMinorAxis\cf5 ()<<\cf4 ", Area= "\cf5 <<e.\cf12 getArea\cf5 ()<<\cf4 ", Circumference= "\cf5 <<e.\cf12 getCircumference\cf5 ();\
    
\f1\b \cf6 return
\f0\b0 \cf5  outputStream;\
\}\
\

\f1\b \cf6 class
\f0\b0 \cf5  \cf7 Circle\cf5  : 
\f1\b \cf6 public
\f0\b0 \cf5  \cf10 Ellipse\cf5 \
\{\

\f1\b \cf6 public
\f0\b0 \cf5 :\
    \cf8 //Consturctors\cf5 \
    \cf9 Circle\cf5 ();\
    \cf9 Circle\cf5 (
\f1\b \cf6 const
\f0\b0 \cf5  
\f1\b \cf6 double
\f0\b0 \cf5  &);\
    \cf9 Circle\cf5 (
\f1\b \cf6 const
\f0\b0 \cf5  \cf10 Circle\cf5  &);\
    \cf8 //Getters\cf5 \
    
\f1\b \cf6 double
\f0\b0 \cf5  \cf9 getRadius\cf5 () 
\f1\b \cf6 const
\f0\b0 \cf5 ;\
    \cf8 //Setters\cf5 \
    
\f1\b \cf6 void
\f0\b0 \cf5  \cf9 setRadius\cf5 (
\f1\b \cf6 const
\f0\b0 \cf5  
\f1\b \cf6 double
\f0\b0 \cf5  &);\
    
\f1\b \cf6 void
\f0\b0 \cf5  \cf9 setMinorAxis\cf5 (
\f1\b \cf6 const
\f0\b0 \cf5  
\f1\b \cf6 double
\f0\b0 \cf5  &);\
    
\f1\b \cf6 void
\f0\b0 \cf5  \cf9 setMajorAxis\cf5 (
\f1\b \cf6 const
\f0\b0 \cf5  
\f1\b \cf6 double
\f0\b0 \cf5  &);\
    \cf8 //Assignment operator\cf5 \
    \cf10 Circle\cf5 & 
\f1\b \cf6 operator
\f0\b0 \cf5  = (
\f1\b \cf6 const
\f0\b0 \cf5  \cf10 Circle\cf5  &);\
    \cf8 //Additional\cf5 \
    
\f1\b \cf6 friend
\f0\b0 \cf5  \cf11 istream\cf5 & 
\f1\b \cf6 operator
\f0\b0 \cf5 >>(\cf11 istream\cf5 & inputStream, \cf10 Circle\cf5  &c);\
    
\f1\b \cf6 friend
\f0\b0 \cf5  \cf11 ostream\cf5 & 
\f1\b \cf6 operator
\f0\b0 \cf5 <<(\cf11 ostream\cf5 & outputStream, 
\f1\b \cf6 const
\f0\b0 \cf5  \cf10 Circle\cf5  &c);\
\
\};\
\cf10 Circle\cf5 ::\cf9 Circle\cf5 ()\
\{\
    
\f1\b \cf6 this
\f0\b0 \cf5 ->\cf12 setRadius\cf5 (\cf13 0.0\cf5 );\
\}\
\cf10 Circle\cf5 ::\cf9 Circle\cf5 (
\f1\b \cf6 const
\f0\b0 \cf5  
\f1\b \cf6 double
\f0\b0 \cf5  &r)\
\{\
    
\f1\b \cf6 this
\f0\b0 \cf5 ->\cf12 setRadius\cf5 (r);\
\}\
\cf10 Circle\cf5 ::\cf9 Circle\cf5 (
\f1\b \cf6 const
\f0\b0 \cf5  \cf10 Circle\cf5  &c)\
\{\
    
\f1\b \cf6 this
\f0\b0 \cf5 ->\cf12 setRadius\cf5 (c.\cf12 getRadius\cf5 ());\
\}\

\f1\b \cf6 double
\f0\b0 \cf5  \cf10 Circle\cf5 ::\cf9 getRadius\cf5 () 
\f1\b \cf6 const
\f0\b0 \cf5 \
\{\
    
\f1\b \cf6 return
\f0\b0 \cf5  \cf12 getMajorAxis\cf5 ();\
\}\

\f1\b \cf6 void
\f0\b0 \cf5  \cf10 Circle\cf5 ::\cf9 setRadius\cf5 (
\f1\b \cf6 const
\f0\b0 \cf5  
\f1\b \cf6 double
\f0\b0 \cf5  &r)\
\{\
    
\f1\b \cf6 this
\f0\b0 \cf5 ->\cf10 Ellipse\cf5 ::\cf12 setMajorAxis\cf5 (r);\
    
\f1\b \cf6 this
\f0\b0 \cf5 ->\cf10 Ellipse\cf5 ::\cf12 setMinorAxis\cf5 (r);\
\}\

\f1\b \cf6 void
\f0\b0 \cf5  \cf10 Circle\cf5 ::\cf9 setMajorAxis\cf5 (
\f1\b \cf6 const
\f0\b0 \cf5  
\f1\b \cf6 double
\f0\b0 \cf5  &r)\
\{\
    
\f1\b \cf6 this
\f0\b0 \cf5 ->\cf12 setRadius\cf5 (r);\
\}\

\f1\b \cf6 void
\f0\b0 \cf5  \cf10 Circle\cf5 ::\cf9 setMinorAxis\cf5 (
\f1\b \cf6 const
\f0\b0 \cf5  
\f1\b \cf6 double
\f0\b0 \cf5  &r)\
\{\
    
\f1\b \cf6 this
\f0\b0 \cf5 ->\cf12 setRadius\cf5 (r);\
\}\
\cf10 Circle\cf5 & \cf10 Circle\cf5 ::
\f1\b \cf6 operator
\f0\b0 \cf5 =(
\f1\b \cf6 const
\f0\b0 \cf5  \cf10 Circle\cf5  &c)\
\{\
    
\f1\b \cf6 this
\f0\b0 \cf5 ->\cf12 setRadius\cf5 (c.\cf12 getRadius\cf5 ());\
    
\f1\b \cf6 return
\f0\b0 \cf5  *
\f1\b \cf6 this
\f0\b0 \cf5 ;\
\}\
\cf11 istream\cf5 & 
\f1\b \cf6 operator
\f0\b0 \cf5 >>(\cf11 istream\cf5 & inputStream, \cf10 Circle\cf5  &c)\
\{\
    \cf14 cout\cf5 <<\cf4 "Reading CIrcle information: "\cf5 <<\cf14 endl\cf5 <<\cf4 "Enter Radius: "\cf5 ;\
    
\f1\b \cf6 double
\f0\b0 \cf5  deli;\
    inputStream>>deli;\
    c.\cf12 setRadius\cf5 (deli);\
    
\f1\b \cf6 return
\f0\b0 \cf5  inputStream;\
\}\
\cf11 ostream\cf5 & 
\f1\b \cf6 operator
\f0\b0 \cf5 <<(\cf11 ostream\cf5 & outputStream, 
\f1\b \cf6 const
\f0\b0 \cf5  \cf10 Circle\cf5  &c)\
\{\
    outputStream <<\cf4 "Circle: Radius= "\cf5 <<c.\cf12 getRadius\cf5 ()<<\cf4 ", Area= "\cf5 <<c.\cf12 getArea\cf5 ()<<\cf4 ", Circumference= "\cf5 <<c.\cf12 getCircumference\cf5 ();\
    
\f1\b \cf6 return
\f0\b0 \cf5  outputStream;\
\}\
\

\f1\b \cf6 class
\f0\b0 \cf5  \cf7 Cylinder\cf5  : 
\f1\b \cf6 public
\f0\b0 \cf5  \cf10 Circle\cf5 \
\{\

\f1\b \cf6 private
\f0\b0 \cf5 :\
    
\f1\b \cf6 double
\f0\b0 \cf5  height;\

\f1\b \cf6 public
\f0\b0 \cf5 :\
    \cf8 //Constructor\cf5 \
    \cf9 Cylinder\cf5 ();\
    \cf9 Cylinder\cf5 (
\f1\b \cf6 const
\f0\b0 \cf5  
\f1\b \cf6 double
\f0\b0 \cf5  &, 
\f1\b \cf6 const
\f0\b0 \cf5  
\f1\b \cf6 double
\f0\b0 \cf5  &);\
    \cf9 Cylinder\cf5 (
\f1\b \cf6 const
\f0\b0 \cf5  \cf10 Cylinder\cf5  &);\
    \cf8 //Assignment operator\cf5 \
    \cf10 Cylinder\cf5 & 
\f1\b \cf6 operator
\f0\b0 \cf5 = (
\f1\b \cf6 const
\f0\b0 \cf5  \cf10 Cylinder\cf5  &);\
    \cf8 //Getter\cf5 \
    
\f1\b \cf6 double
\f0\b0 \cf5  \cf9 getHeight\cf5 () 
\f1\b \cf6 const
\f0\b0 \cf5 ;\
    \cf8 //Setter\cf5 \
    
\f1\b \cf6 void
\f0\b0 \cf5  \cf9 setHeight\cf5 (
\f1\b \cf6 const
\f0\b0 \cf5  
\f1\b \cf6 double
\f0\b0 \cf5  &);\
    \cf8 //Additional\cf5 \
    
\f1\b \cf6 double
\f0\b0 \cf5  \cf9 getArea\cf5 () 
\f1\b \cf6 const
\f0\b0 \cf5 ;\
    
\f1\b \cf6 double
\f0\b0 \cf5  \cf9 getVolume\cf5 () 
\f1\b \cf6 const
\f0\b0 \cf5 ;\
    
\f1\b \cf6 friend
\f0\b0 \cf5  \cf11 istream\cf5 & 
\f1\b \cf6 operator
\f0\b0 \cf5 >>(\cf11 istream\cf5 & inputStream, \cf10 Cylinder\cf5  &c);\
    
\f1\b \cf6 friend
\f0\b0 \cf5  \cf11 ostream\cf5 & 
\f1\b \cf6 operator
\f0\b0 \cf5 <<(\cf11 ostream\cf5 & outputStream, 
\f1\b \cf6 const
\f0\b0 \cf5  \cf10 Cylinder\cf5  &c);\
\};\
\cf10 Cylinder\cf5 ::\cf9 Cylinder\cf5 ()\
\{\
    
\f1\b \cf6 this
\f0\b0 \cf5 ->\cf12 setRadius\cf5 (\cf13 0\cf5 );\
    \cf12 height\cf5  = \cf13 0\cf5 ;\
\}\
\cf10 Cylinder\cf5 ::\cf9 Cylinder\cf5 (
\f1\b \cf6 const
\f0\b0 \cf5  
\f1\b \cf6 double
\f0\b0 \cf5  &r, 
\f1\b \cf6 const
\f0\b0 \cf5  
\f1\b \cf6 double
\f0\b0 \cf5  &h)\
\{\
    
\f1\b \cf6 this
\f0\b0 \cf5 ->\cf12 setRadius\cf5 (r);\
    \cf12 height\cf5  = h;\
\}\
\cf10 Cylinder\cf5 ::\cf9 Cylinder\cf5 (
\f1\b \cf6 const
\f0\b0 \cf5  \cf10 Cylinder\cf5  &cy)\
\{\
    
\f1\b \cf6 this
\f0\b0 \cf5 ->\cf12 setRadius\cf5 (cy.\cf12 getRadius\cf5 ());\
    \cf12 height\cf5  = cy.\cf12 getHeight\cf5 ();\
\}\
\cf10 Cylinder\cf5 & \cf10 Cylinder\cf5 ::
\f1\b \cf6 operator
\f0\b0 \cf5 =(
\f1\b \cf6 const
\f0\b0 \cf5  \cf10 Cylinder\cf5  &cy)\
\{\
    
\f1\b \cf6 this
\f0\b0 \cf5 ->\cf12 setRadius\cf5 (cy.\cf12 getRadius\cf5 ());\
    
\f1\b \cf6 this
\f0\b0 \cf5 ->\cf12 setHeight\cf5 (cy.\cf12 getHeight\cf5 ());\
    
\f1\b \cf6 return
\f0\b0 \cf5  *
\f1\b \cf6 this
\f0\b0 \cf5 ;\
\}\

\f1\b \cf6 double
\f0\b0 \cf5  \cf10 Cylinder\cf5 ::\cf9 getHeight\cf5 () 
\f1\b \cf6 const
\f0\b0 \cf5 \
\{\
    
\f1\b \cf6 return
\f0\b0 \cf5  \cf12 height\cf5 ;\
\}\

\f1\b \cf6 void
\f0\b0 \cf5  \cf10 Cylinder\cf5 ::\cf9 setHeight\cf5 (
\f1\b \cf6 const
\f0\b0 \cf5  
\f1\b \cf6 double
\f0\b0 \cf5  &h)\
\{\
    \cf12 height\cf5  = h;\
\}\

\f1\b \cf6 double
\f0\b0 \cf5  \cf10 Cylinder\cf5 ::\cf9 getArea\cf5 () 
\f1\b \cf6 const
\f0\b0 \cf5 \
\{\
    
\f1\b \cf6 double
\f0\b0 \cf5  r = 
\f1\b \cf6 this
\f0\b0 \cf5 ->\cf12 getRadius\cf5 ();\
    
\f1\b \cf6 double
\f0\b0 \cf5  h = 
\f1\b \cf6 this
\f0\b0 \cf5 ->\cf12 getHeight\cf5 ();\
    
\f1\b \cf6 return
\f0\b0 \cf5  \cf2 M_PI\cf5  * \cf14 pow\cf5 (r, \cf13 2\cf5 ) + \cf13 2\cf5  * \cf2 M_PI\cf5  * r * h;\
\}\

\f1\b \cf6 double
\f0\b0 \cf5  \cf10 Cylinder\cf5 ::\cf9 getVolume\cf5 () 
\f1\b \cf6 const
\f0\b0 \cf5 \
\{\
    
\f1\b \cf6 double
\f0\b0 \cf5  r = 
\f1\b \cf6 this
\f0\b0 \cf5 ->\cf12 getRadius\cf5 ();\
    
\f1\b \cf6 double
\f0\b0 \cf5  h = 
\f1\b \cf6 this
\f0\b0 \cf5 ->\cf12 getHeight\cf5 ();\
    
\f1\b \cf6 return
\f0\b0 \cf5  \cf2 M_PI\cf5  * \cf14 pow\cf5 (r, \cf13 2\cf5 ) * h;\
\}\
\cf11 istream\cf5 & 
\f1\b \cf6 operator
\f0\b0 \cf5 >>(\cf11 istream\cf5 & inputStream, \cf10 Cylinder\cf5  &c)\
\{\
    
\f1\b \cf6 double
\f0\b0 \cf5  len;\
    \cf14 cout\cf5 <<\cf4 "Reading Cylinder information: "\cf5 <<\cf14 endl\cf5 <<\cf4 "Enter radius: "\cf5 ;\
    inputStream>>len;\
    c.\cf12 setRadius\cf5 (len);\
    \cf14 cout\cf5 <<\cf4 "Enter heigth: "\cf5 ;\
    inputStream>>len;\
    c.\cf12 setHeight\cf5 (len);\
    
\f1\b \cf6 return
\f0\b0 \cf5  inputStream;\
\}\
\cf11 ostream\cf5 & 
\f1\b \cf6 operator
\f0\b0 \cf5 <<(\cf11 ostream\cf5 & outputStream, 
\f1\b \cf6 const
\f0\b0 \cf5  \cf10 Cylinder\cf5  &c)\
\{\
    \cf14 cout\cf5 <<\cf4 "Cylinder: Radius= "\cf5 <<c.\cf12 getRadius\cf5 ()<<\cf4 ", height= "\cf5 <<c.\cf12 getHeight\cf5 ()<<\cf4 ", Total Surface Area= "\cf5 <<c.\cf12 getArea\cf5 ()<<\cf4 ", Volume= "\cf5 <<c.\cf12 getVolume\cf5 ();\
    
\f1\b \cf6 return
\f0\b0 \cf5  outputStream;\
\}\
\

\f1\b \cf6 class
\f0\b0 \cf5  \cf7 Disk\cf5  : 
\f1\b \cf6 public
\f0\b0 \cf5  \cf10 Cylinder\cf5 \
\{\
    \cf8 //Constructor\cf5 \
    \cf9 Disk\cf5 ();\
    \cf9 Disk\cf5 (
\f1\b \cf6 const
\f0\b0 \cf5  
\f1\b \cf6 double
\f0\b0 \cf5  &, 
\f1\b \cf6 const
\f0\b0 \cf5  
\f1\b \cf6 double
\f0\b0 \cf5  &);\
    \cf9 Disk\cf5 (
\f1\b \cf6 const
\f0\b0 \cf5  \cf10 Disk\cf5  &);\
    \cf8 //Assignment operator\cf5 \
    \cf10 Disk\cf5 & 
\f1\b \cf6 operator
\f0\b0 \cf5 = (
\f1\b \cf6 const
\f0\b0 \cf5  \cf10 Disk\cf5  &);\
    \cf8 //Additional\cf5 \
    
\f1\b \cf6 double
\f0\b0 \cf5  \cf9 getArea\cf5 () 
\f1\b \cf6 const
\f0\b0 \cf5 ;\
    
\f1\b \cf6 friend
\f0\b0 \cf5  \cf11 istream\cf5 & 
\f1\b \cf6 operator
\f0\b0 \cf5 >>(\cf11 istream\cf5 & inputStream, \cf10 Disk\cf5  &c);\
    
\f1\b \cf6 friend
\f0\b0 \cf5  \cf11 ostream\cf5 & 
\f1\b \cf6 operator
\f0\b0 \cf5 <<(\cf11 ostream\cf5 & outputStream, 
\f1\b \cf6 const
\f0\b0 \cf5  \cf10 Disk\cf5  &c);\
\};\
\cf10 Disk\cf5 ::\cf9 Disk\cf5 ()\
\{\
    \cf10 Cylinder\cf5 ();\
\}\
\cf10 Disk\cf5 ::\cf9 Disk\cf5 (
\f1\b \cf6 const
\f0\b0 \cf5  
\f1\b \cf6 double
\f0\b0 \cf5  &r, 
\f1\b \cf6 const
\f0\b0 \cf5  
\f1\b \cf6 double
\f0\b0 \cf5  &h)\
\{\
    \cf10 Cylinder\cf5 (r,h);\
\}\
\cf10 Disk\cf5 ::\cf9 Disk\cf5 (
\f1\b \cf6 const
\f0\b0 \cf5  \cf10 Disk\cf5  &d)\
\{\
    \cf10 Cylinder\cf5 (
\f1\b \cf6 static_cast
\f0\b0 \cf5 <\cf10 Cylinder\cf5 >(d));\
\}\
\cf10 Disk\cf5 & \cf10 Disk\cf5 ::
\f1\b \cf6 operator
\f0\b0 \cf5 =(
\f1\b \cf6 const
\f0\b0 \cf5  \cf10 Disk\cf5  &d)\
\{\
    
\f1\b \cf6 this
\f0\b0 \cf5 ->\cf12 setHeight\cf5 (d.\cf12 getHeight\cf5 ());\
    
\f1\b \cf6 this
\f0\b0 \cf5 ->\cf12 setRadius\cf5 (d.\cf12 getRadius\cf5 ());\
    
\f1\b \cf6 return
\f0\b0 \cf5  *
\f1\b \cf6 this
\f0\b0 \cf5 ;\
\}\

\f1\b \cf6 double
\f0\b0 \cf5  \cf10 Disk\cf5 ::\cf9 getArea\cf5 () 
\f1\b \cf6 const
\f0\b0 \cf5 \
\{\
    
\f1\b \cf6 return
\f0\b0 \cf5  (
\f1\b \cf6 this
\f0\b0 \cf5 ->\cf10 Circle\cf5 ::\cf12 getArea\cf5 () + 
\f1\b \cf6 this
\f0\b0 \cf5 ->\cf10 Cylinder\cf5 ::\cf12 getArea\cf5 ());\
\}\
\cf11 istream\cf5 & 
\f1\b \cf6 operator
\f0\b0 \cf5 >>(\cf11 istream\cf5 & inputStream, \cf10 Disk\cf5  &c)\
\{\
    
\f1\b \cf6 double
\f0\b0 \cf5  len;\
    \cf14 cout\cf5 <<\cf4 "Reading Disk information: "\cf5 <<\cf14 endl\cf5 <<\cf4 "Enter radius: "\cf5 ;\
    inputStream>>len;\
    c.\cf12 setRadius\cf5 (len);\
    \cf14 cout\cf5 <<\cf4 "Enter heigth: "\cf5 ;\
    inputStream>>len;\
    c.\cf12 setHeight\cf5 (len);\
    
\f1\b \cf6 return
\f0\b0 \cf5  inputStream;\
\}\
\cf11 ostream\cf5 & 
\f1\b \cf6 operator
\f0\b0 \cf5 <<(\cf11 ostream\cf5 & outputStream, 
\f1\b \cf6 const
\f0\b0 \cf5  \cf10 Disk\cf5  &c)\
\{\
    \cf14 cout\cf5 <<\cf4 "Disk: Radius= "\cf5 <<c.\cf12 getRadius\cf5 ()<<\cf4 ", height= "\cf5 <<c.\cf12 getHeight\cf5 ()<<\cf4 ", Surface Area= "\cf5 <<c.\cf12 getArea\cf5 ()<<\cf4 ", Volume= "\cf5 <<c.\cf12 getVolume\cf5 ();\
    
\f1\b \cf6 return
\f0\b0 \cf5  outputStream;\
\}\
\

\f1\b \cf6 class
\f0\b0 \cf5  \cf7 Ellipsoid\cf5  : 
\f1\b \cf6 public
\f0\b0 \cf5  \cf10 Ellipse\cf5 \
\{\

\f1\b \cf6 private
\f0\b0 \cf5 :\
    
\f1\b \cf6 double
\f0\b0 \cf5  height;\

\f1\b \cf6 public
\f0\b0 \cf5 :\
    \cf8 //Constructor\cf5 \
    \cf9 Ellipsoid\cf5 ();\
    \cf9 Ellipsoid\cf5 (
\f1\b \cf6 const
\f0\b0 \cf5  
\f1\b \cf6 double
\f0\b0 \cf5  &, 
\f1\b \cf6 const
\f0\b0 \cf5  
\f1\b \cf6 double
\f0\b0 \cf5  &, 
\f1\b \cf6 const
\f0\b0 \cf5  
\f1\b \cf6 double
\f0\b0 \cf5  &);\
    \cf9 Ellipsoid\cf5 (
\f1\b \cf6 const
\f0\b0 \cf5  \cf10 Ellipsoid\cf5  &);\
    \cf8 //Assignment operator\cf5 \
    \cf10 Ellipsoid\cf5 & 
\f1\b \cf6 operator
\f0\b0 \cf5 =(
\f1\b \cf6 const
\f0\b0 \cf5  \cf10 Ellipsoid\cf5  &);\
    \cf8 //Getter\cf5 \
    
\f1\b \cf6 double
\f0\b0 \cf5  \cf9 getHeight\cf5 () 
\f1\b \cf6 const
\f0\b0 \cf5 ;\
    \cf8 //Setter\cf5 \
    
\f1\b \cf6 void
\f0\b0 \cf5  \cf9 setHeight\cf5 (
\f1\b \cf6 const
\f0\b0 \cf5  
\f1\b \cf6 double
\f0\b0 \cf5  &);\
    \cf8 //Additional\cf5 \
    
\f1\b \cf6 double
\f0\b0 \cf5  \cf9 getArea\cf5 () 
\f1\b \cf6 const
\f0\b0 \cf5 ;\
    
\f1\b \cf6 double
\f0\b0 \cf5  \cf9 getVolume\cf5 () 
\f1\b \cf6 const
\f0\b0 \cf5 ;\
    
\f1\b \cf6 friend
\f0\b0 \cf5  \cf11 istream\cf5 & 
\f1\b \cf6 operator
\f0\b0 \cf5  >>(\cf11 istream\cf5 & in,\cf10 Ellipsoid\cf5  &E);\
    
\f1\b \cf6 friend
\f0\b0 \cf5  \cf11 ostream\cf5 & 
\f1\b \cf6 operator
\f0\b0 \cf5  <<(\cf11 ostream\cf5 & out, 
\f1\b \cf6 const
\f0\b0 \cf5  \cf10 Ellipsoid\cf5  &E);\
\};\
\cf10 Ellipsoid\cf5 ::\cf9 Ellipsoid\cf5 ():\cf10 Ellipse\cf5 ()\
\{\
    \cf12 height\cf5  = \cf13 0.0\cf5 ;\
\}\
\cf10 Ellipsoid\cf5 ::\cf9 Ellipsoid\cf5 (
\f1\b \cf6 const
\f0\b0 \cf5  
\f1\b \cf6 double
\f0\b0 \cf5  &minor, 
\f1\b \cf6 const
\f0\b0 \cf5  
\f1\b \cf6 double
\f0\b0 \cf5  &major, 
\f1\b \cf6 const
\f0\b0 \cf5  
\f1\b \cf6 double
\f0\b0 \cf5  &h):\cf10 Ellipse\cf5 (minor, major)\
\{\
    \cf12 height\cf5  = h;\
\}\
\cf10 Ellipsoid\cf5 ::\cf9 Ellipsoid\cf5 (
\f1\b \cf6 const
\f0\b0 \cf5  \cf10 Ellipsoid\cf5  &e):\cf10 Ellipse\cf5 (e.\cf12 getMinorAxis\cf5 (),e.\cf12 getMajorAxis\cf5 ())\
\{\
    \cf12 height\cf5  = e.\cf12 getHeight\cf5 ();\
\}\

\f1\b \cf6 double
\f0\b0 \cf5  \cf10 Ellipsoid\cf5 ::\cf9 getHeight\cf5 () 
\f1\b \cf6 const
\f0\b0 \cf5 \
\{\
    
\f1\b \cf6 return
\f0\b0 \cf5  \cf12 height\cf5 ;\
\}\

\f1\b \cf6 void
\f0\b0 \cf5  \cf10 Ellipsoid\cf5 ::\cf9 setHeight\cf5 (
\f1\b \cf6 const
\f0\b0 \cf5  
\f1\b \cf6 double
\f0\b0 \cf5  &h)\
\{\
    \cf12 height\cf5  = h;\
\}\

\f1\b \cf6 double
\f0\b0 \cf5  \cf10 Ellipsoid\cf5 ::\cf9 getArea\cf5 () 
\f1\b \cf6 const
\f0\b0 \cf5 \
\{\
    
\f1\b \cf6 double
\f0\b0 \cf5  a = 
\f1\b \cf6 this
\f0\b0 \cf5 ->\cf12 getMinorAxis\cf5 ();\
    
\f1\b \cf6 double
\f0\b0 \cf5  b = 
\f1\b \cf6 this
\f0\b0 \cf5 ->\cf12 getMajorAxis\cf5 ();\
    
\f1\b \cf6 double
\f0\b0 \cf5  c = 
\f1\b \cf6 this
\f0\b0 \cf5 ->\cf12 getHeight\cf5 ();\
    
\f1\b \cf6 double
\f0\b0 \cf5  p = \cf13 1.6075\cf5 ;\
    
\f1\b \cf6 return
\f0\b0 \cf5  \cf13 4\cf5  * \cf2 M_PI\cf5  * ((\cf14 pow\cf5 (a, p)*\cf14 pow\cf5 (b, p)+\cf14 pow\cf5 (a, p)*\cf14 pow\cf5 (c, p)+\cf14 pow\cf5 (b, p)*\cf14 pow\cf5 (c, p))/\cf13 3\cf5 );\
\}\

\f1\b \cf6 double
\f0\b0 \cf5  \cf10 Ellipsoid\cf5 ::\cf9 getVolume\cf5 () 
\f1\b \cf6 const
\f0\b0 \cf5 \
\{\
    
\f1\b \cf6 double
\f0\b0 \cf5  a = 
\f1\b \cf6 this
\f0\b0 \cf5 ->\cf12 getMinorAxis\cf5 ();\
    
\f1\b \cf6 double
\f0\b0 \cf5  b = 
\f1\b \cf6 this
\f0\b0 \cf5 ->\cf12 getMajorAxis\cf5 ();\
    
\f1\b \cf6 double
\f0\b0 \cf5  h = \cf12 height\cf5 ;\
    
\f1\b \cf6 return
\f0\b0 \cf5  \cf13 4\cf5 /\cf13 3\cf5  * \cf2 M_PI\cf5  * a * b * h;\
\}\
\cf11 istream\cf5 & 
\f1\b \cf6 operator
\f0\b0 \cf5  >>(\cf11 istream\cf5 & in,\cf10 Ellipsoid\cf5  &E)\
\{\
    
\f1\b \cf6 double
\f0\b0 \cf5  temp;\
    \cf14 cout\cf5 <<\cf4 "Reading this minorAxis"\cf5 ;\
    in>>temp;\
    E.\cf12 setMinorAxis\cf5 (temp);\
    \cf14 cout\cf5 <<\cf4 "Reading this majorAxis"\cf5 ;\
    in>>temp;\
    E.\cf12 setMajorAxis\cf5 (temp);\
    \cf14 cout\cf5 <<\cf4 "Reading this height"\cf5 ;\
    in>>temp;\
    E.\cf12 setHeight\cf5 (temp);\
    
\f1\b \cf6 return
\f0\b0 \cf5  in;\
\}\
\cf11 ostream\cf5 & 
\f1\b \cf6 operator
\f0\b0 \cf5  <<(\cf11 ostream\cf5 & out, 
\f1\b \cf6 const
\f0\b0 \cf5  \cf10 Ellipsoid\cf5  &E)\
\{\
    out<<\cf4 "The majorAxis is"\cf5 << E.\cf12 getMajorAxis\cf5 ()<<\cf4 " and the minorAxis is "\cf5 <<E.\cf12 getMinorAxis\cf5 ()<<\cf4 " and the Height is "\cf5 <<E.\cf12 getHeight\cf5 ()<<\cf14 endl\cf5 ;\
    
\f1\b \cf6 return
\f0\b0 \cf5  out;\
\}\
\

\f1\b \cf6 class
\f0\b0 \cf5  \cf7 Sphere\cf5  : 
\f1\b \cf6 public
\f0\b0 \cf5  \cf10 Ellipsoid\cf5 \
\{\

\f1\b \cf6 public
\f0\b0 \cf5 :\
    \cf8 //Constructor\cf5 \
    \cf9 Sphere\cf5 ();\
    \cf9 Sphere\cf5 (
\f1\b \cf6 const
\f0\b0 \cf5  
\f1\b \cf6 double
\f0\b0 \cf5  &);\
    \cf9 Sphere\cf5 (
\f1\b \cf6 const
\f0\b0 \cf5  \cf10 Sphere\cf5  &);\
    \cf8 //Assignment operator\cf5 \
    \cf10 Sphere\cf5 & 
\f1\b \cf6 operator
\f0\b0 \cf5 = (
\f1\b \cf6 const
\f0\b0 \cf5  \cf10 Sphere\cf5  &);\
    \cf8 //Getter\cf5 \
    
\f1\b \cf6 double
\f0\b0 \cf5  \cf9 getRadius\cf5 () 
\f1\b \cf6 const
\f0\b0 \cf5 ;\
    \cf8 //Setter\cf5 \
    
\f1\b \cf6 void
\f0\b0 \cf5  \cf9 setMinorAxis\cf5 (
\f1\b \cf6 const
\f0\b0 \cf5  
\f1\b \cf6 double
\f0\b0 \cf5  &);\
    
\f1\b \cf6 void
\f0\b0 \cf5  \cf9 setMajorAxis\cf5 (
\f1\b \cf6 const
\f0\b0 \cf5  
\f1\b \cf6 double
\f0\b0 \cf5  &);\
    
\f1\b \cf6 void
\f0\b0 \cf5  \cf9 setHeight\cf5 (
\f1\b \cf6 const
\f0\b0 \cf5  
\f1\b \cf6 double
\f0\b0 \cf5  &);\
    
\f1\b \cf6 void
\f0\b0 \cf5  \cf9 setRadius\cf5 (
\f1\b \cf6 const
\f0\b0 \cf5  
\f1\b \cf6 double
\f0\b0 \cf5  &);\
    \cf8 //Additional\cf5 \
    
\f1\b \cf6 friend
\f0\b0 \cf5  \cf11 istream\cf5 & 
\f1\b \cf6 operator
\f0\b0 \cf5  >>(\cf11 istream\cf5 & in,\cf10 Ellipsoid\cf5  &E);\
    
\f1\b \cf6 friend
\f0\b0 \cf5  \cf11 ostream\cf5 & 
\f1\b \cf6 operator
\f0\b0 \cf5  <<(\cf11 ostream\cf5 & out, 
\f1\b \cf6 const
\f0\b0 \cf5  \cf10 Ellipsoid\cf5  &E);\
\};\
\cf10 Sphere\cf5 ::\cf9 Sphere\cf5 ()\
\{\
    
\f1\b \cf6 this
\f0\b0 \cf5 ->\cf12 setRadius\cf5 (\cf13 0.0\cf5 );\
\}\
\cf10 Sphere\cf5 ::\cf9 Sphere\cf5 (
\f1\b \cf6 const
\f0\b0 \cf5  
\f1\b \cf6 double
\f0\b0 \cf5  &r)\
\{\
    
\f1\b \cf6 this
\f0\b0 \cf5 ->\cf12 setRadius\cf5 (r);\
\}\
\cf10 Sphere\cf5 ::\cf9 Sphere\cf5 (
\f1\b \cf6 const
\f0\b0 \cf5  \cf10 Sphere\cf5  &s)\
\{\
    
\f1\b \cf6 this
\f0\b0 \cf5 ->\cf12 setRadius\cf5 (s.\cf12 getRadius\cf5 ());\
\}\
\cf10 Sphere\cf5 & \cf10 Sphere\cf5 ::
\f1\b \cf6 operator
\f0\b0 \cf5 =(
\f1\b \cf6 const
\f0\b0 \cf5  \cf10 Sphere\cf5  &s)\
\{\
    
\f1\b \cf6 this
\f0\b0 \cf5 ->\cf12 setRadius\cf5 (s.\cf12 getRadius\cf5 ());\
    
\f1\b \cf6 return
\f0\b0 \cf5  *
\f1\b \cf6 this
\f0\b0 \cf5 ;\
\}\

\f1\b \cf6 double
\f0\b0 \cf5  \cf10 Sphere\cf5 ::\cf9 getRadius\cf5 () 
\f1\b \cf6 const
\f0\b0 \cf5 \
\{\
    
\f1\b \cf6 return
\f0\b0 \cf5  \cf12 getHeight\cf5 ();\
\}\

\f1\b \cf6 void
\f0\b0 \cf5  \cf10 Sphere\cf5 ::\cf9 setMinorAxis\cf5 (
\f1\b \cf6 const
\f0\b0 \cf5  
\f1\b \cf6 double
\f0\b0 \cf5  & r)\
\{\
    
\f1\b \cf6 this
\f0\b0 \cf5 ->\cf12 setRadius\cf5 (r);\
\}\

\f1\b \cf6 void
\f0\b0 \cf5  \cf10 Sphere\cf5 ::\cf9 setMajorAxis\cf5 (
\f1\b \cf6 const
\f0\b0 \cf5  
\f1\b \cf6 double
\f0\b0 \cf5  & r)\
\{\
    
\f1\b \cf6 this
\f0\b0 \cf5 ->\cf12 setRadius\cf5 (r);\
\}\

\f1\b \cf6 void
\f0\b0 \cf5  \cf10 Sphere\cf5 ::\cf9 setHeight\cf5 (
\f1\b \cf6 const
\f0\b0 \cf5  
\f1\b \cf6 double
\f0\b0 \cf5  & r)\
\{\
    
\f1\b \cf6 this
\f0\b0 \cf5 ->\cf12 setRadius\cf5 (r);\
\}\

\f1\b \cf6 void
\f0\b0 \cf5  \cf10 Sphere\cf5 ::\cf9 setRadius\cf5 (
\f1\b \cf6 const
\f0\b0 \cf5  
\f1\b \cf6 double
\f0\b0 \cf5  & r)\
\{\
    
\f1\b \cf6 this
\f0\b0 \cf5 ->\cf10 Ellipsoid\cf5 ::\cf12 setHeight\cf5 (r);\
    
\f1\b \cf6 this
\f0\b0 \cf5 ->\cf10 Ellipse\cf5 ::\cf12 setMajorAxis\cf5 (r);\
    
\f1\b \cf6 this
\f0\b0 \cf5 ->\cf10 Ellipse\cf5 ::\cf12 setMinorAxis\cf5 (r);\
\}\
\cf11 istream\cf5 & 
\f1\b \cf6 operator
\f0\b0 \cf5  >>(\cf11 istream\cf5 & in,\cf10 Ellipsoid\cf5  &E);\
\cf11 ostream\cf5 & 
\f1\b \cf6 operator
\f0\b0 \cf5  <<(\cf11 ostream\cf5 & out, 
\f1\b \cf6 const
\f0\b0 \cf5  \cf10 Ellipsoid\cf5  &E);\
\
\
\
\

\f1\b \cf6 int
\f0\b0 \cf5  \cf9 main\cf5 ()\
\{\
    \
    \cf14 system\cf5 (\cf4 "Pause"\cf5 );\
    
\f1\b \cf6 return
\f0\b0 \cf5  \cf13 0\cf5 ;\
\}\
}